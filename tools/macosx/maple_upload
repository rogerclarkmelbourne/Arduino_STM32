#!/bin/bash

MAXWAITCOUNT=40  # about 4000ms

set -e

if [ $# -lt 4 ]; then
    echo "Usage: $0 $# <dummy_port> <altID> <usbID> <binfile>" >&2
    exit 1
fi
dummy_port=$1; altID=$2; usbID=$3; binfile=$4;dummy_port_fullpath="/dev/$1"


# Get the directory where the script is running.
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )


# -----------------  Old code to reset the USB - which doesn't seem to work --------
#
#if we can find the Serial device try resetting it and then sleeping for 1 sec while the board reboots
#if [ -e $dummy_port_fullpath ]; then
#	echo "resetting " $dummy_port_fullpath
#	stty -f $dummy_port_fullpath 1200
#	sleep 1
##	stty -f $dummy_port_fullpath 1200
##	sleep 1
#fi
# ------------------  End of old code -----------------

${DIR}/upload-reset ${dummy_port_fullpath}

if [ $# -eq 5 ]; then
    dfuse_addr="--dfuse-address $5"
else
    dfuse_addr=""
fi

#DFU_UTIL=/usr/local/bin/dfu-util
DFU_UTIL=${DIR}/dfu-util/dfu-util
if [ ! -x ${DFU_UTIL} ]; then
    DFU_UTIL=/opt/local/bin/dfu-util
fi

if [ ! -x ${DFU_UTIL} ]; then
    echo "$0: error: cannot find ${DFU_UTIL}" >&2
    exit 2
fi

# wait for the DFU device after upload-reset command reboot target
COUNTER=0
while ! ${DFU_UTIL} -d ${usbID} -l | grep -e '^Found DFU: '  && ((COUNTER++ < ${MAXWAITCOUNT})); do
    sleep 0.1
done
if ((${MAXWAITCOUNT} <= $COUNTER)); then
    echo "$0: error: cannot find ${usbID}" >&2
    exit 2
fi

${DFU_UTIL} -d ${usbID} -a ${altID} -D ${binfile} -R ${dfuse_addr} -R

echo -n Waiting for ${dummy_port_fullpath} serial...

COUNTER=0
while ! dd if=${dummy_port_fullpath} of=/dev/null count=0 > /dev/null 2>&1 && ((COUNTER++ < ${MAXWAITCOUNT})); do
    sleep 0.1
done

echo Done
